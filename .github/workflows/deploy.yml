name: CI/CD Pipeline (Web App)

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout the repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 3️⃣ Build Docker image
      - name: Build Docker image
        run: |
          docker build -t eliasbe123/elias-portfolio:latest apps/web

      # 4️⃣ Log in to Docker Hub
      - name: Docker Hub login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 5️⃣ Push Docker image to Docker Hub
      - name: Push Docker image
        run: |
          docker push eliasbe123/elias-portfolio:latest

      # 6️⃣ Add VPS and Pi host keys to known_hosts
      - name: Add SSH known hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_KNOWN_HOSTS }}" >> ~/.ssh/known_hosts
          echo "${{ secrets.PI_KNOWN_HOSTS }}" >> ~/.ssh/known_hosts

      # 7️⃣ Deploy Docker image on Pi via VPS
      - name: Deploy on Pi via VPS
        run: |
          # 1️⃣ Prepare SSH for GitHub Actions
          mkdir -p ~/.ssh
          printf "%s\n" "${{ secrets.PI_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
      
          # 2️⃣ Add the Pi host to known_hosts (prevents host verification prompts)
          ssh-keyscan -H ${{ secrets.PI_HOST }} >> ~/.ssh/known_hosts
      
          # 3️⃣ Optionally, add VPS host if using ProxyJump
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts
      
          # 4️⃣ Copy the build from VPS to Pi
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no \
              -J root@${{ secrets.VPS_HOST }} \
              ${{ secrets.PI_USER }}@${{ secrets.PI_HOST }} "mkdir -p ~/deploy"
      
          scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no \
              -o ProxyJump=root@${{ secrets.VPS_HOST }} \
              ~/deploy/build.tar.gz ${{ secrets.PI_USER }}@${{ secrets.PI_HOST }}:~/deploy/
      
          # 5️⃣ Extract and run Docker on the Pi
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no \
              -J root@${{ secrets.VPS_HOST }} \
              ${{ secrets.PI_USER }}@${{ secrets.PI_HOST }} "
              cd ~/deploy &&
              tar -xzf build.tar.gz &&
              docker compose down &&
              docker compose up -d --build
          "


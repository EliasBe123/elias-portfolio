name: CI/CD Pipeline (Web App)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout the repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 3️⃣ Log in to Docker Hub
      - name: Docker Hub login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      # 4️⃣ Build and push Docker image for Pi 5 (ARM64)
      - name: Build and push Docker image for Pi 5
        run: |
          docker buildx create --use
          docker buildx build \
            --platform linux/arm64 \
            -t eliasbe123/elias-portfolio:latest \
            --push apps/web

      # 5️⃣ Deploy to Pi via VPS
      - name: Deploy on Pi via VPS
        env:
          VPS_HOST: ${{ secrets.VPS_HOST }}
          PI_HOST: ${{ secrets.PI_HOST }}
          PI_USER: ${{ secrets.PI_USER }}
        run: |
          set -euo pipefail
      
          echo "Starting SSH agent..."
          eval "$(ssh-agent -s)"
      
          # Add keys
          echo "${{ secrets.VPS_SSH_KEY }}" | tr -d '\r' | ssh-add -
          echo "${{ secrets.PI_SSH_KEY }}" | tr -d '\r' | ssh-add -
      
          # Ensure known_hosts exists
          mkdir -p ~/.ssh
          touch ~/.ssh/known_hosts
      
          echo "Testing connection to VPS..."
          ssh -o StrictHostKeyChecking=no deploy@$VPS_HOST "echo Connected to VPS"
      
          echo "Testing connection to Pi via VPS..."
          ssh -A -o StrictHostKeyChecking=no -J deploy@$VPS_HOST $PI_USER@$PI_HOST "echo Connected to Pi"
      
          echo "Copying docker-compose.yml to Pi..."
          scp -o StrictHostKeyChecking=no -J deploy@$VPS_HOST ./infra/pi/docker-compose.yml $PI_USER@$PI_HOST:~/deploy/docker-compose.yml
      
          echo "Deploying Docker image on Pi..."
          ssh -A -o StrictHostKeyChecking=no -J deploy@$VPS_HOST $PI_USER@$PI_HOST "
            set -e
            cd ~/deploy || mkdir -p ~/deploy && cd ~/deploy
            docker pull eliasbe123/elias-portfolio:latest
            docker compose down || true
            docker compose up -d --build
          "

name: CI/CD Pipeline (Web App)

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Setup Node
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 3️⃣ Install dependencies
      - name: Install dependencies
        working-directory: apps/web
        run: npm install --legacy-peer-deps

      # 4️⃣ Build app
      - name: Build app
        working-directory: apps/web
        run: npm run build

      # 5️⃣ Archive build
      - name: Archive build
        working-directory: apps/web
        run: tar -czf build.tar.gz dist/

      # 6️⃣ Copy build to VPS
      - name: Copy build to VPS
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.VPS_HOST }}
          username: root
          key: ${{ secrets.VPS_SSH_KEY }}
          source: apps/web/build.tar.gz
          target: ~/deploy/

      # 7️⃣ SSH into VPS and deploy to Pi
      - name: Deploy on Pi via VPS
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.VPS_HOST }}
          username: root
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            # Ensure deploy folder exists on VPS
            mkdir -p ~/deploy

            # Copy tarball from VPS to Pi
            ssh -i ~/.ssh/ci_deploy_pi -o StrictHostKeyChecking=no ${{ secrets.PI_USER }}@${{ secrets.PI_HOST }} "mkdir -p ~/deploy"
            scp -i ~/.ssh/ci_deploy_pi -o StrictHostKeyChecking=no ~/deploy/build.tar.gz ${{ secrets.PI_USER }}@${{ secrets.PI_HOST }}:~/deploy/

            # Extract and run Docker on Pi
            ssh -i ~/.ssh/ci_deploy_pi -o StrictHostKeyChecking=no ${{ secrets.PI_USER }}@${{ secrets.PI_HOST }} "
              cd ~/deploy &&
              tar -xzf build.tar.gz &&
              docker compose down &&
              docker compose up -d --build
            "
